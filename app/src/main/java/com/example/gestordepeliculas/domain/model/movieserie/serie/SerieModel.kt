package com.example.gestordepeliculas.domain.model.movieserie.serie

import com.example.gestordepeliculas.data.remote.models.serie.SerieDetails
import com.example.gestordepeliculas.data.remote.models.serie.SerieResult
import com.example.gestordepeliculas.domain.model.movieserie.GenreModel
import com.example.gestordepeliculas.domain.model.movieserie.ProductionCompanyModel
import com.example.gestordepeliculas.domain.model.movieserie.ProductionCountryModel
import com.example.gestordepeliculas.domain.model.movieserie.SpokenLanguageModel
import com.example.gestordepeliculas.domain.model.movieserie.WatchProvidersModel
import com.example.gestordepeliculas.domain.model.movieserie.movieseriepersonModel
import com.example.gestordepeliculas.domain.model.movieserie.toDomain
import com.example.gestordepeliculas.ui.elements.scaffolds.tabscaffold.TabItems


data class SerieModel (
    override val typeModel: TabItems = TabItems.SERIE,
    override val id: Int,
    override val title_name: String?,
    override val photo_path: String?,

    val adult: Boolean?,
    val backdrop_path: String?,
    val created_by: List<CreatorModel>,
    val episode_run_time: List<Int>,
    val first_air_date: String?,
    val genres: List<GenreModel>,
    val homepage: String?,
    val in_production: Boolean?,
    val languages: List<String>,
    val last_air_date: String?,
    val last_episode_to_air: EpisodeModel?,
    val name: String?,
    val next_episode_to_air: EpisodeModel?,
    val networks: List<NetworkModel>,
    val number_of_episodes: Int?,
    val number_of_seasons: Int?,
    val origin_country: List<String>,
    val original_language: String?,
    val original_name: String?,
    val overview: String?,
    val popularity: Double?,
    val poster_path: String?,
    val production_companies: List<ProductionCompanyModel>,
    val production_countries: List<ProductionCountryModel>,
    val seasons: List<SeasonModel>,
    val spoken_languages: List<SpokenLanguageModel>,
    val status: String?,
    val tagline: String?,
    val type: String?,
    val vote_average: Double?,
    val vote_count: Int?,
    val providers: WatchProvidersModel?,
): movieseriepersonModel

fun SerieDetails.toDomain() = SerieModel(
    adult = adult,
    backdrop_path = backdrop_path,
    photo_path = poster_path,
    title_name = name,
    created_by = created_by?.map { it.toDomain() }?: emptyList(),
    episode_run_time = episode_run_time?: emptyList(),
    first_air_date = first_air_date,
    genres = genres?.map { it.toDomain() }?: emptyList(),
    homepage = homepage,
    id = id,
    in_production = in_production,
    languages = languages?: emptyList(),
    last_air_date = last_air_date,
    last_episode_to_air = last_episode_to_air?.toDomain(),
    name = name,
    next_episode_to_air = next_episode_to_air?.toDomain(),
    networks = networks?.map { it.toDomain() }?: emptyList(),
    number_of_episodes = number_of_episodes,
    number_of_seasons = number_of_seasons,
    origin_country = origin_country?: emptyList(),
    original_language = original_language,
    original_name = original_name,
    overview = overview,
    popularity = popularity,
    poster_path = poster_path,
    production_companies = production_companies?.map { it.toDomain() }?: emptyList(),
    production_countries = production_countries?.map { it.toDomain() }?: emptyList(),
    seasons = seasons?.map { it.toDomain() }?: emptyList(),
    spoken_languages = spoken_languages?.map { it.toDomain() }?: emptyList(),
    status = status,
    tagline = tagline,
    type = type,
    vote_average = vote_average,
    vote_count = vote_count,
    providers = null,
)

fun SerieResult.toDomain() = SerieModel(
    adult = false,
    backdrop_path = backdrop_path,
    photo_path = poster_path,
    title_name = name,
    created_by = emptyList<CreatorModel>(),
    episode_run_time = emptyList<Int>(),
    first_air_date = first_air_date,
    genres = emptyList<GenreModel>(),
    homepage = null,
    id = id,
    in_production = false,
    languages = emptyList<String>(),
    last_air_date = null,
    last_episode_to_air = null,
    name = name,
    next_episode_to_air = null,
    networks = emptyList<NetworkModel>(),
    number_of_episodes = 0,
    number_of_seasons = 0,
    origin_country = origin_country?: emptyList(),
    original_language = original_language,
    original_name = original_name,
    overview = overview,
    popularity = popularity,
    poster_path = poster_path,
    production_companies = emptyList<ProductionCompanyModel>(),
    production_countries = emptyList<ProductionCountryModel>(),
    seasons = emptyList<SeasonModel>(),
    spoken_languages = emptyList<SpokenLanguageModel>(),
    status = null,
    tagline = null,
    type = null,
    vote_average = vote_average,
    vote_count = vote_count,
    providers = null,
)